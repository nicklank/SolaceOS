{"ast":null,"code":"import React,{createContext,useState,useContext}from'react';// Function to get today's date in MST\nimport{jsx as _jsx}from\"react/jsx-runtime\";const getTodayDateInMST=()=>{const now=new Date();console.log(\"Current local date and time:\",now);// Log current local date and time\nconst utcTimestamp=now.getTime()+now.getTimezoneOffset()*60000;// Convert to UTC timestamp\nconst mstOffset=-7;// MST is UTC-7\nconst mstDate=new Date(utcTimestamp+mstOffset*3600000);// Adjust UTC to MST\nconsole.log(\"MST date and time:\",mstDate);// Log MST date and time\nreturn mstDate.toISOString().split('T')[0];// Return as 'YYYY-MM-DD'\n};// Create a Context for the calendar\nconst CalendarContext=/*#__PURE__*/createContext();export const CalendarProvider=_ref=>{let{children}=_ref;const[selectedDate,setSelectedDate]=useState(getTodayDateInMST());// Default to today in MST\n// Function to get the start and end of the week based on the current date\nconst getWeekDateRange=function(){let currentDate=arguments.length>0&&arguments[0]!==undefined?arguments[0]:selectedDate;const startOfWeek=new Date(currentDate);console.log(\"Current Date for Week Range Calculation:\",currentDate);// Log input date\nconst dayOfWeek=startOfWeek.getDay();// Get the current day of the week (0 for Sunday, 1 for Monday, etc.)\nconst daysToMonday=(dayOfWeek+6)%7;// Calculate days to previous Monday\nstartOfWeek.setDate(startOfWeek.getDate()-daysToMonday);// Adjust to Monday\nconst endOfWeek=new Date(startOfWeek);endOfWeek.setDate(endOfWeek.getDate()+6);// Set to Sunday (end of the week)\nconsole.log(\"Start of Week (Monday):\",startOfWeek);// Log start of the week\nconsole.log(\"End of Week (Sunday):\",endOfWeek);// Log end of the week\nreturn{start:startOfWeek.toISOString().split('T')[0],// Format start date\nend:endOfWeek.toISOString().split('T')[0]// Format end date\n};};// Function to handle date change by a specific number of days\nconst changeDate=days=>{const newDate=new Date(selectedDate);console.log(\"Selected Date before change:\",selectedDate);// Log current selected date\nnewDate.setDate(newDate.getDate()+days);// Adjust date by 'days'\nconst formattedDate=newDate.toISOString().split('T')[0];console.log(\"New Date after change:\",formattedDate);// Log new date\nsetSelectedDate(formattedDate);// Update selectedDate\n};// Expose selectedDate and helper functions via context\nreturn/*#__PURE__*/_jsx(CalendarContext.Provider,{value:{selectedDate,getWeekDateRange,changeDate,setSelectedDate},children:children});};// Custom hook for using the calendar context\nexport const useCalendar=()=>useContext(CalendarContext);","map":{"version":3,"names":["React","createContext","useState","useContext","jsx","_jsx","getTodayDateInMST","now","Date","console","log","utcTimestamp","getTime","getTimezoneOffset","mstOffset","mstDate","toISOString","split","CalendarContext","CalendarProvider","_ref","children","selectedDate","setSelectedDate","getWeekDateRange","currentDate","arguments","length","undefined","startOfWeek","dayOfWeek","getDay","daysToMonday","setDate","getDate","endOfWeek","start","end","changeDate","days","newDate","formattedDate","Provider","value","useCalendar"],"sources":["/Users/nicklankau/life-tracker/SolaceOS/frontend/src/components/CalendarContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\n// Function to get today's date in MST\nconst getTodayDateInMST = () => {\n  const now = new Date();\n  console.log(\"Current local date and time:\", now); // Log current local date and time\n  const utcTimestamp = now.getTime() + (now.getTimezoneOffset() * 60000); // Convert to UTC timestamp\n  const mstOffset = -7; // MST is UTC-7\n  const mstDate = new Date(utcTimestamp + (mstOffset * 3600000)); // Adjust UTC to MST\n  console.log(\"MST date and time:\", mstDate); // Log MST date and time\n  return mstDate.toISOString().split('T')[0]; // Return as 'YYYY-MM-DD'\n};\n\n// Create a Context for the calendar\nconst CalendarContext = createContext();\n\nexport const CalendarProvider = ({ children }) => {\n  const [selectedDate, setSelectedDate] = useState(getTodayDateInMST()); // Default to today in MST\n\n  // Function to get the start and end of the week based on the current date\n  const getWeekDateRange = (currentDate = selectedDate) => {\n    const startOfWeek = new Date(currentDate);\n    console.log(\"Current Date for Week Range Calculation:\", currentDate); // Log input date\n    const dayOfWeek = startOfWeek.getDay(); // Get the current day of the week (0 for Sunday, 1 for Monday, etc.)\n    const daysToMonday = (dayOfWeek + 6) % 7; // Calculate days to previous Monday\n    startOfWeek.setDate(startOfWeek.getDate() - daysToMonday); // Adjust to Monday\n\n    const endOfWeek = new Date(startOfWeek);\n    endOfWeek.setDate(endOfWeek.getDate() + 6); // Set to Sunday (end of the week)\n\n    console.log(\"Start of Week (Monday):\", startOfWeek); // Log start of the week\n    console.log(\"End of Week (Sunday):\", endOfWeek); // Log end of the week\n\n    return {\n      start: startOfWeek.toISOString().split('T')[0], // Format start date\n      end: endOfWeek.toISOString().split('T')[0], // Format end date\n    };\n  };\n\n  // Function to handle date change by a specific number of days\n  const changeDate = (days) => {\n    const newDate = new Date(selectedDate);\n    console.log(\"Selected Date before change:\", selectedDate); // Log current selected date\n    newDate.setDate(newDate.getDate() + days); // Adjust date by 'days'\n    const formattedDate = newDate.toISOString().split('T')[0];\n    console.log(\"New Date after change:\", formattedDate); // Log new date\n    setSelectedDate(formattedDate); // Update selectedDate\n  };\n\n  // Expose selectedDate and helper functions via context\n  return (\n    <CalendarContext.Provider value={{ selectedDate, getWeekDateRange, changeDate, setSelectedDate }}>\n      {children}\n    </CalendarContext.Provider>\n  );\n};\n\n// Custom hook for using the calendar context\nexport const useCalendar = () => useContext(CalendarContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}