{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./AdaptiveCalendar.css';import{getTasksByDate,updateTaskTime}from'../apiService';// Import the updateTaskTime function\nimport{useCalendar}from'./CalendarContext';// Import the useCalendar hook\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdaptiveCalendar=()=>{const{selectedDate}=useCalendar();// Get the selectedDate from CalendarContext\nconst[tasks,setTasks]=useState([]);const[draggedTask,setDraggedTask]=useState(null);// State to keep track of the dragged task\nuseEffect(()=>{const fetchTasks=async()=>{try{const fetchedTasks=await getTasksByDate(selectedDate);// Use selectedDate from CalendarContext\nsetTasks(fetchedTasks);}catch(error){console.error('Error fetching tasks:',error);}};fetchTasks();},[selectedDate]);// Re-fetch tasks when selectedDate changes\nconst handleDragStart=task=>{setDraggedTask(task);// Set the dragged task\n};const handleDrop=async(event,timeSlot)=>{event.preventDefault();// Prevent default behavior\nif(draggedTask){try{// Update the task with the new time slot\nawait updateTaskTime(draggedTask.id,{time:timeSlot});// Refresh the tasks\nconst updatedTasks=await getTasksByDate(selectedDate);setTasks(updatedTasks);setDraggedTask(null);// Clear the dragged task\n}catch(error){console.error('Error updating task time:',error);}}};const handleDragOver=event=>{event.preventDefault();// Allow drop\nevent.target.classList.add('drag-over');};const handleDragLeave=event=>{event.preventDefault();event.target.classList.remove('drag-over');};// Generating time slots from 7 AM to 11 PM\nconst timeSlots=Array.from({length:17},(_,i)=>{const hour=7+i;return hour>12?\"\".concat(hour-12,\" PM\"):\"\".concat(hour,\" AM\");});return/*#__PURE__*/_jsx(\"div\",{className:\"adaptive-calendar-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"adaptive-calendar-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Tasks\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:timeSlots.map((slot,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"time-slot\",onDrop:event=>handleDrop(event,slot),onDragOver:handleDragOver,onDragLeave:handleDragLeave,children:slot}),index===0&&/*#__PURE__*/_jsx(\"td\",{className:\"task-slot\",rowSpan:timeSlots.length,children:tasks.map(task=>/*#__PURE__*/_jsxs(\"div\",{className:\"task-item \".concat(task.completed?'completed':''),draggable:true,onDragStart:()=>handleDragStart(task),children:[/*#__PURE__*/_jsx(\"span\",{children:task.name}),\" \"]},task.id))})]},index))})]})});};export default AdaptiveCalendar;","map":{"version":3,"names":["React","useEffect","useState","getTasksByDate","updateTaskTime","useCalendar","jsx","_jsx","jsxs","_jsxs","AdaptiveCalendar","selectedDate","tasks","setTasks","draggedTask","setDraggedTask","fetchTasks","fetchedTasks","error","console","handleDragStart","task","handleDrop","event","timeSlot","preventDefault","id","time","updatedTasks","handleDragOver","target","classList","add","handleDragLeave","remove","timeSlots","Array","from","length","_","i","hour","concat","className","children","map","slot","index","onDrop","onDragOver","onDragLeave","rowSpan","completed","draggable","onDragStart","name"],"sources":["/Users/nicklankau/life-tracker/SolaceOS/frontend/src/components/AdaptiveCalendar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './AdaptiveCalendar.css';\nimport { getTasksByDate, updateTaskTime } from '../apiService'; // Import the updateTaskTime function\nimport { useCalendar } from './CalendarContext'; // Import the useCalendar hook\n\nconst AdaptiveCalendar = () => {\n    const { selectedDate } = useCalendar(); // Get the selectedDate from CalendarContext\n    const [tasks, setTasks] = useState([]);\n    const [draggedTask, setDraggedTask] = useState(null); // State to keep track of the dragged task\n\n    useEffect(() => {\n        const fetchTasks = async () => {\n            try {\n                const fetchedTasks = await getTasksByDate(selectedDate); // Use selectedDate from CalendarContext\n                setTasks(fetchedTasks);\n            } catch (error) {\n                console.error('Error fetching tasks:', error);\n            }\n        };\n\n        fetchTasks();\n    }, [selectedDate]); // Re-fetch tasks when selectedDate changes\n\n    const handleDragStart = (task) => {\n        setDraggedTask(task); // Set the dragged task\n    };\n\n    const handleDrop = async (event, timeSlot) => {\n        event.preventDefault(); // Prevent default behavior\n\n        if (draggedTask) {\n            try {\n                // Update the task with the new time slot\n                await updateTaskTime(draggedTask.id, { time: timeSlot });\n                // Refresh the tasks\n                const updatedTasks = await getTasksByDate(selectedDate);\n                setTasks(updatedTasks);\n                setDraggedTask(null); // Clear the dragged task\n            } catch (error) {\n                console.error('Error updating task time:', error);\n            }\n        }\n    };\n\n    const handleDragOver = (event) => {\n        event.preventDefault(); // Allow drop\n        event.target.classList.add('drag-over');\n    };\n\n    const handleDragLeave = (event) => {\n        event.preventDefault();\n        event.target.classList.remove('drag-over');\n    };\n\n    // Generating time slots from 7 AM to 11 PM\n    const timeSlots = Array.from({ length: 17 }, (_, i) => {\n        const hour = 7 + i;\n        return hour > 12 ? `${hour - 12} PM` : `${hour} AM`;\n    });\n\n    return (\n        <div className=\"adaptive-calendar-container\">\n            <table className=\"adaptive-calendar-table\">\n                <thead>\n                    <tr>\n                        <th>Time</th>\n                        <th>Tasks</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {timeSlots.map((slot, index) => (\n                        <tr key={index}>\n                            <td\n                                className=\"time-slot\"\n                                onDrop={(event) => handleDrop(event, slot)}\n                                onDragOver={handleDragOver}\n                                onDragLeave={handleDragLeave}\n                            >\n                                {slot}\n                            </td>\n                            {index === 0 && (\n                                <td\n                                    className=\"task-slot\"\n                                    rowSpan={timeSlots.length}\n                                >\n                                    {tasks.map((task) => (\n                                        <div\n                                            key={task.id}\n                                            className={`task-item ${task.completed ? 'completed' : ''}`}\n                                            draggable\n                                            onDragStart={() => handleDragStart(task)}\n                                        >\n                                            <span>{task.name}</span> {/* Wrapping the task name with a span */}\n                                        </div>\n                                    ))}\n                                </td>\n                            )}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default AdaptiveCalendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}