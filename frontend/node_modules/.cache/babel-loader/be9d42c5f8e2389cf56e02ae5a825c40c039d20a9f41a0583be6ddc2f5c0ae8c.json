{"ast":null,"code":"import React,{useState}from'react';import HabitTracker from'./HabitTracker';import TaskView from'./TaskView';import Journal from'./Journal';import AdaptiveCalendar from'./AdaptiveCalendar';import{useCalendar}from'./CalendarContext';// Import the useCalendar hook\nimport'./Homepage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Homepage=()=>{const{selectedDate,changeDate}=useCalendar();// Use the selectedDate from CalendarContext\nconst[activeTab,setActiveTab]=useState('today');const handleTabChange=tab=>{setActiveTab(tab);};// Function to format the selected date for display in MST\nconst formatDateForDisplay=dateString=>{// Create a Date object from the date string in MST timezone\nconst[year,month,day]=dateString.split('-');// Split the 'YYYY-MM-DD' format\nconst date=new Date(year,month-1,day);// Create a new Date object (month is 0-based)\nconst options={month:'long',day:'numeric'};// Formatting options for the date\nconst formattedDate=date.toLocaleDateString('en-US',options);// e.g., \"January 24\"\n// get day of the week\nconst dayOfWeek=date.toLocaleDateString('en-US',{weekday:'long'});return{dayOfWeek,formattedDate,year};};const{dayOfWeek,formattedDate,year}=formatDateForDisplay(selectedDate);return/*#__PURE__*/_jsxs(\"div\",{className:\"homepage-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"date-display\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"arrow-button\",onClick:()=>changeDate(-1),children:\"\\u25C0\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"date-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"date-display-large\",children:[/*#__PURE__*/_jsx(\"div\",{children:dayOfWeek}),/*#__PURE__*/_jsx(\"div\",{children:formattedDate})]}),/*#__PURE__*/_jsx(\"div\",{className:\"date-display-small\",children:year})]}),/*#__PURE__*/_jsx(\"button\",{className:\"arrow-button\",onClick:()=>changeDate(1),children:\"\\u25B6\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"homepage-controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleTabChange('today'),className:activeTab==='today'?'active':'',children:\"Today\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleTabChange('week'),className:activeTab==='week'?'active':'',children:\"Week\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleTabChange('month'),className:activeTab==='month'?'active':'',children:\"Month\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"homepage-content\",children:[activeTab==='today'&&/*#__PURE__*/_jsxs(\"div\",{className:\"today-view\",children:[/*#__PURE__*/_jsx(HabitTracker,{viewMode:\"default\"}),/*#__PURE__*/_jsx(AdaptiveCalendar,{}),/*#__PURE__*/_jsx(Journal,{selectedDate:selectedDate})]}),activeTab==='week'&&/*#__PURE__*/_jsx(TaskView,{}),activeTab==='month'&&/*#__PURE__*/_jsx(HabitTracker,{viewMode:\"monthly\"})]})]});};export default Homepage;","map":{"version":3,"names":["React","useState","HabitTracker","TaskView","Journal","AdaptiveCalendar","useCalendar","jsx","_jsx","jsxs","_jsxs","Homepage","selectedDate","changeDate","activeTab","setActiveTab","handleTabChange","tab","formatDateForDisplay","dateString","year","month","day","split","date","Date","options","formattedDate","toLocaleDateString","dayOfWeek","weekday","className","children","onClick","viewMode"],"sources":["/Users/nicklankau/life-tracker/SolaceOS/frontend/src/components/Homepage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport HabitTracker from './HabitTracker';\nimport TaskView from './TaskView';\nimport Journal from './Journal';\nimport AdaptiveCalendar from './AdaptiveCalendar';\nimport { useCalendar } from './CalendarContext'; // Import the useCalendar hook\nimport './Homepage.css';\n\nconst Homepage = () => {\n  const { selectedDate, changeDate } = useCalendar(); // Use the selectedDate from CalendarContext\n  const [activeTab, setActiveTab] = useState('today');\n\n  const handleTabChange = (tab) => {\n    setActiveTab(tab);\n  };\n\n  // Function to format the selected date for display in MST\n  const formatDateForDisplay = (dateString) => {\n    // Create a Date object from the date string in MST timezone\n    const [year, month, day] = dateString.split('-'); // Split the 'YYYY-MM-DD' format\n    const date = new Date(year, month - 1, day); // Create a new Date object (month is 0-based)\n\n    const options = { month: 'long', day: 'numeric' }; // Formatting options for the date\n    const formattedDate = date.toLocaleDateString('en-US', options); // e.g., \"January 24\"\n\n    // get day of the week\n    const dayOfWeek = date.toLocaleDateString('en-US', {weekday: 'long'});\n\n    return { dayOfWeek, formattedDate, year };\n  };\n\n  const { dayOfWeek, formattedDate, year } = formatDateForDisplay(selectedDate);\n\n  return (\n        <div className=\"homepage-container\">\n            {/* Date display section */}\n            <div className=\"date-display\">\n                <button className=\"arrow-button\" onClick={() => changeDate(-1)}>◀</button>\n                <div className=\"date-container\">\n                    <div className=\"date-display-large\">\n                        <div>{dayOfWeek}</div>\n                        <div>{formattedDate}</div>\n                    </div>\n                    <div className=\"date-display-small\">{year}</div>\n                </div>\n                <button className=\"arrow-button\" onClick={() => changeDate(1)}>▶</button>\n            </div>\n\n            {/* Tab controls */}\n            <div className=\"homepage-controls\">\n                <button onClick={() => handleTabChange('today')} className={activeTab === 'today' ? 'active' : ''}>Today</button>\n                <button onClick={() => handleTabChange('week')} className={activeTab === 'week' ? 'active' : ''}>Week</button>\n                <button onClick={() => handleTabChange('month')} className={activeTab === 'month' ? 'active' : ''}>Month</button>\n            </div>\n\n            {/* Main content based on the active tab */}\n            <div className=\"homepage-content\">\n                {activeTab === 'today' && (\n                    <div className=\"today-view\">\n                        <HabitTracker viewMode=\"default\" />\n                        <AdaptiveCalendar />\n                        <Journal selectedDate={selectedDate} />\n                    </div>\n                )}\n                {activeTab === 'week' && <TaskView />}\n                {activeTab === 'month' && <HabitTracker viewMode=\"monthly\" />}\n            </div>\n        </div>\n    );\n};\n\nexport default Homepage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}