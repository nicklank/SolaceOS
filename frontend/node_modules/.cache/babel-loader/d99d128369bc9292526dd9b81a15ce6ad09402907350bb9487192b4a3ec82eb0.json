{"ast":null,"code":"import _objectSpread from\"/Users/nicklankau/life-tracker/SolaceOS/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{getHabits,createHabit,deleteHabit,createHabitEntry,updateHabitEntry}from'../apiService';import'./HabitTracker.css';import'./TaskView.css';import{useCalendar}from'./CalendarContext';// Import the custom hook\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HabitTracker=_ref=>{let{viewMode='default'}=_ref;const{selectedDate,setSelectedDate,changeDate}=useCalendar();// Use context value\nconst[habits,setHabits]=useState([]);const[newHabit,setNewHabit]=useState('');const[isEditMode,setIsEditMode]=useState(false);const[editStatus,setEditStatus]=useState({habitId:null,date:null});useEffect(()=>{fetchHabits();},[selectedDate]);// Fetch habits when selectedDate changes\nconst fetchHabits=async()=>{try{const response=await getHabits();setHabits(response);}catch(error){console.error('Error fetching habits:',error);}};const addHabit=async e=>{e.preventDefault();if(!newHabit.trim()){console.log('Habit name cannot be empty');return;}const habit={name:newHabit,description:''};try{const response=await createHabit(habit);setHabits([...habits,response]);setNewHabit('');}catch(error){console.error('Error creating habit:',error);}};const deleteHabitById=async habitId=>{try{await deleteHabit(habitId);setHabits(habits.filter(habit=>habit.id!==habitId));}catch(error){console.error('Error deleting habit:',error);}};const handleToggle=async(habitId,date)=>{const habit=habits.find(h=>h.id===habitId);if(!habit)return;const entry=habit.entries?habit.entries.find(e=>e.date===date):null;if(entry){try{const response=await updateHabitEntry(entry.id,_objectSpread(_objectSpread({},entry),{},{completed:!entry.completed}));const updatedHabits=habits.map(h=>{if(h.id===habitId){return _objectSpread(_objectSpread({},h),{},{entries:h.entries.map(e=>e.id===entry.id?response:e)});}return h;});setHabits(updatedHabits);}catch(error){console.error('Error updating habit entry:',error);}}else{try{const response=await createHabitEntry({habit:habitId,date,completed:true});const updatedHabits=habits.map(h=>{if(h.id===habitId){return _objectSpread(_objectSpread({},h),{},{entries:[...(h.entries||[]),response]});}return h;});setHabits(updatedHabits);}catch(error){console.error('Error creating habit entry:',error);}}};const getStatusSymbol=(status,customValue)=>{return status?customValue||'✔️':'';};const handleDateChange=days=>{changeDate(days);// Use changeDate from context\n};const handleDateInputChange=e=>{const newDate=new Date(e.target.value).toISOString().split('T')[0];setSelectedDate(newDate);// Update selectedDate in context\n};const handleDoubleClick=(habitId,date)=>{setEditStatus({habitId,date});};const handleInputChange=(e,habitId,date)=>{const value=e.target.value.charAt(0);const habit=habits.find(h=>h.id===habitId);if(!habit)return;const entry=habit.entries?habit.entries.find(e=>e.date===date):null;if(entry){const updatedEntry=_objectSpread(_objectSpread({},entry),{},{customValue:value,completed:true});updateHabitEntry(entry.id,updatedEntry).then(response=>{const updatedHabits=habits.map(h=>{if(h.id===habitId){return _objectSpread(_objectSpread({},h),{},{entries:h.entries.map(e=>e.id===entry.id?response:e)});}return h;});setHabits(updatedHabits);setEditStatus({habitId:null,date:null});}).catch(error=>console.error('Error updating habit entry:',error));}else{const newEntry={habit:habitId,date,customValue:value,completed:true};createHabitEntry(newEntry).then(response=>{const updatedHabits=habits.map(h=>{if(h.id===habitId){return _objectSpread(_objectSpread({},h),{},{entries:[...(h.entries||[]),response]});}return h;});setHabits(updatedHabits);setEditStatus({habitId:null,date:null});}).catch(error=>console.error('Error creating habit entry:',error));}};const renderDefaultView=()=>/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"table\",{className:\"habit-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Habit\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),isEditMode&&/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:habits.length>0?habits.map(habit=>{const entry=habit.entries?habit.entries.find(e=>e.date===selectedDate):null;const isCompleted=entry?entry.completed:false;const customValue=entry?entry.customValue:'';return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:habit.name}),/*#__PURE__*/_jsx(\"td\",{onDoubleClick:()=>handleDoubleClick(habit.id,selectedDate),children:editStatus.habitId===habit.id&&editStatus.date===selectedDate?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:customValue,onChange:e=>handleInputChange(e,habit.id,selectedDate),maxLength:\"2\",autoFocus:true,className:\"small-input\"}):/*#__PURE__*/_jsx(\"button\",{className:\"status-button \".concat(isCompleted?'completed':'not-completed'),onClick:()=>handleToggle(habit.id,selectedDate),children:getStatusSymbol(isCompleted,customValue)})}),isEditMode&&/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteHabitById(habit.id),children:\"Delete\"})})]},habit.id);}):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:isEditMode?\"3\":\"2\",children:\"No habits found\"})})})]})});const renderMonthView=()=>{const[year,month]=selectedDate.split('-').map(Number);const daysInMonth=new Date(year,month,0).getDate();const daysArray=Array.from({length:daysInMonth},(_,i)=>i+1);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"table\",{className:\"habit-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Day\"}),habits.map(habit=>/*#__PURE__*/_jsx(\"th\",{children:habit.name},habit.id))]})}),/*#__PURE__*/_jsx(\"tbody\",{children:daysArray.map(day=>{const date=new Date(year,month-1,day).toISOString().split('T')[0];return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:day}),/*#__PURE__*/_jsx(\"td\",{children:new Date(date).toLocaleDateString('en-US',{weekday:'short'})}),habits.map(habit=>{const entry=habit.entries?habit.entries.find(e=>e.date===date):null;return/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"status-button \".concat(entry!==null&&entry!==void 0&&entry.completed?'completed':'not-completed'),onClick:()=>handleToggle(habit.id,date),children:getStatusSymbol(entry===null||entry===void 0?void 0:entry.completed,entry===null||entry===void 0?void 0:entry.customValue)})},habit.id);})]},day);})})]})});};return/*#__PURE__*/_jsxs(\"div\",{className:\"habit-tracker\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:addHabit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newHabit,onChange:e=>setNewHabit(e.target.value),placeholder:\"New Habit\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Habit\"})]}),viewMode==='default'?renderDefaultView():renderMonthView()]});};export default HabitTracker;","map":{"version":3,"names":["React","useState","useEffect","getHabits","createHabit","deleteHabit","createHabitEntry","updateHabitEntry","useCalendar","jsx","_jsx","jsxs","_jsxs","HabitTracker","_ref","viewMode","selectedDate","setSelectedDate","changeDate","habits","setHabits","newHabit","setNewHabit","isEditMode","setIsEditMode","editStatus","setEditStatus","habitId","date","fetchHabits","response","error","console","addHabit","e","preventDefault","trim","log","habit","name","description","deleteHabitById","filter","id","handleToggle","find","h","entry","entries","_objectSpread","completed","updatedHabits","map","getStatusSymbol","status","customValue","handleDateChange","days","handleDateInputChange","newDate","Date","target","value","toISOString","split","handleDoubleClick","handleInputChange","charAt","updatedEntry","then","catch","newEntry","renderDefaultView","children","className","length","isCompleted","onDoubleClick","type","onChange","maxLength","autoFocus","concat","onClick","colSpan","renderMonthView","year","month","Number","daysInMonth","getDate","daysArray","Array","from","_","i","day","toLocaleDateString","weekday","onSubmit","placeholder"],"sources":["/Users/nicklankau/life-tracker/SolaceOS/frontend/src/components/HabitTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getHabits, createHabit, deleteHabit, createHabitEntry, updateHabitEntry } from '../apiService';\nimport './HabitTracker.css';\nimport './TaskView.css';\nimport { useCalendar } from './CalendarContext'; // Import the custom hook\n\nconst HabitTracker = ({ viewMode = 'default' }) => {\n  const { selectedDate, setSelectedDate, changeDate } = useCalendar(); // Use context value\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [editStatus, setEditStatus] = useState({ habitId: null, date: null });\n\n\n  useEffect(() => {\n    fetchHabits();\n  }, [selectedDate]); // Fetch habits when selectedDate changes\n\n  const fetchHabits = async () => {\n    try {\n      const response = await getHabits();\n      setHabits(response);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n\n  const addHabit = async (e) => {\n    e.preventDefault();\n\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n\n    const habit = { name: newHabit, description: '' };\n\n    try {\n      const response = await createHabit(habit);\n      setHabits([...habits, response]);\n      setNewHabit('');\n    } catch (error) {\n      console.error('Error creating habit:', error);\n    }\n  };\n\n  const deleteHabitById = async (habitId) => {\n    try {\n      await deleteHabit(habitId);\n      setHabits(habits.filter(habit => habit.id !== habitId));\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n    }\n  };\n\n  const handleToggle = async (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n\n    if (entry) {\n      try {\n        const response = await updateHabitEntry(entry.id, { ...entry, completed: !entry.completed });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: h.entries.map(e => e.id === entry.id ? response : e) };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error updating habit entry:', error);\n      }\n    } else {\n      try {\n        const response = await createHabitEntry({ habit: habitId, date, completed: true });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: [...(h.entries || []), response] };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error creating habit entry:', error);\n      }\n    }\n  };\n\n  const getStatusSymbol = (status, customValue) => {\n    return status ? customValue || '✔️' : '';\n  };\n\n  const handleDateChange = (days) => {\n    changeDate(days); // Use changeDate from context\n  };\n\n  const handleDateInputChange = (e) => {\n    const newDate = new Date(e.target.value).toISOString().split('T')[0];\n    setSelectedDate(newDate); // Update selectedDate in context\n  };\n\n  const handleDoubleClick = (habitId, date) => {\n    setEditStatus({ habitId, date });\n  };\n\n  const handleInputChange = (e, habitId, date) => {\n    const value = e.target.value.charAt(0);\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n\n    if (entry) {\n      const updatedEntry = { ...entry, customValue: value, completed: true };\n      updateHabitEntry(entry.id, updatedEntry)\n        .then(response => {\n          const updatedHabits = habits.map(h => {\n            if (h.id === habitId) {\n              return { ...h, entries: h.entries.map(e => e.id === entry.id ? response : e) };\n            }\n            return h;\n          });\n          setHabits(updatedHabits);\n          setEditStatus({ habitId: null, date: null });\n        })\n        .catch(error => console.error('Error updating habit entry:', error));\n    } else {\n      const newEntry = { habit: habitId, date, customValue: value, completed: true };\n      createHabitEntry(newEntry)\n        .then(response => {\n          const updatedHabits = habits.map(h => {\n            if (h.id === habitId) {\n              return { ...h, entries: [...(h.entries || []), response] };\n            }\n            return h;\n          });\n          setHabits(updatedHabits);\n          setEditStatus({ habitId: null, date: null });\n        })\n        .catch(error => console.error('Error creating habit entry:', error));\n    }\n  };\n\n  const renderDefaultView = () => (\n    <div>\n      <table className=\"habit-table\">\n        <thead>\n          <tr>\n            <th>Habit</th>\n            <th>Status</th>\n            {isEditMode && <th>Actions</th>}\n          </tr>\n        </thead>\n        <tbody>\n          {habits.length > 0 ? habits.map(habit => {\n            const entry = habit.entries ? habit.entries.find(e => e.date === selectedDate) : null;\n            const isCompleted = entry ? entry.completed : false;\n            const customValue = entry ? entry.customValue : '';\n            return (\n              <tr key={habit.id}>\n                <td>{habit.name}</td>\n                <td onDoubleClick={() => handleDoubleClick(habit.id, selectedDate)}>\n                  {editStatus.habitId === habit.id && editStatus.date === selectedDate ? (\n                    <input\n                      type=\"text\"\n                      value={customValue}\n                      onChange={(e) => handleInputChange(e, habit.id, selectedDate)}\n                      maxLength=\"2\"\n                      autoFocus\n                      className=\"small-input\"\n                    />\n                  ) : (\n                    <button\n                      className={`status-button ${isCompleted ? 'completed' : 'not-completed'}`}\n                      onClick={() => handleToggle(habit.id, selectedDate)}\n                    >\n                      {getStatusSymbol(isCompleted, customValue)}\n                    </button>\n                  )}\n                </td>\n                {isEditMode && (\n                  <td>\n                    <button onClick={() => deleteHabitById(habit.id)}>Delete</button>\n                  </td>\n                )}\n              </tr>\n            );\n          }) : <tr><td colSpan={isEditMode ? \"3\" : \"2\"}>No habits found</td></tr>}\n        </tbody>\n      </table>\n    </div>\n  );\n\n  const renderMonthView = () => {\n    const [year, month] = selectedDate.split('-').map(Number);\n    const daysInMonth = new Date(year, month, 0).getDate();\n    const daysArray = Array.from({ length: daysInMonth }, (_, i) => i + 1);\n\n    return (\n      <div>\n        <table className=\"habit-table\">\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Day</th>\n              {habits.map(habit => (\n                <th key={habit.id}>{habit.name}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {daysArray.map(day => {\n              const date = new Date(year, month - 1, day).toISOString().split('T')[0];\n              return (\n                <tr key={day}>\n                  <td>{day}</td>\n                  <td>{new Date(date).toLocaleDateString('en-US', { weekday: 'short' })}</td>\n                  {habits.map(habit => {\n                    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n                    return (\n                      <td key={habit.id}>\n                        <button\n                          className={`status-button ${entry?.completed ? 'completed' : 'not-completed'}`}\n                          onClick={() => handleToggle(habit.id, date)}\n                        >\n                          {getStatusSymbol(entry?.completed, entry?.customValue)}\n                        </button>\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"habit-tracker\">\n      <form onSubmit={addHabit}>\n        <input\n          type=\"text\"\n          value={newHabit}\n          onChange={(e) => setNewHabit(e.target.value)}\n          placeholder=\"New Habit\"\n        />\n        <button type=\"submit\">Add Habit</button>\n      </form>\n      {viewMode === 'default' ? renderDefaultView() : renderMonthView()}\n    </div>\n  );\n};\n\nexport default HabitTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}