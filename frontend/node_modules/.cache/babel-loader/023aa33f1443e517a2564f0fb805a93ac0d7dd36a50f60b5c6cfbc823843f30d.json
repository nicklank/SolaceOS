{"ast":null,"code":"import React,{useState,useEffect}from'react';import apiService from'../apiService';import'./Journal.css';import{useCalendar}from'./CalendarContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Journal=()=>{const{selectedDate}=useCalendar();const[journalEntry,setJournalEntry]=useState(\"\");const[entryId,setEntryId]=useState(null);// Store the ID of the journal entry\nuseEffect(()=>{const fetchJournalEntry=async()=>{try{console.log('Fetching journal entry for date:',selectedDate);const response=await apiService.getJournalEntryByDate(selectedDate);console.log('API Response:',response);if(response&&response.entry_text!==undefined){setJournalEntry(response.entry_text||\"\");setEntryId(response.id);// Store the ID of the fetched entry\nconsole.log('Journal entry ID set:',response.id);}else{setJournalEntry(\"\");setEntryId(null);// Reset the ID if no entry is found\nconsole.log('No journal entry found for this date.');}}catch(error){console.error('Error fetching journal entry:',error);}};fetchJournalEntry();},[selectedDate]);const handleSaveJournalEntry=async()=>{try{const journalData={entry_text:journalEntry,date:selectedDate};if(entryId){// If an entry exists, update it\nconst response=await apiService.updateJournalEntry(entryId,journalData);console.log('Journal entry updated:',response);}else{// If no entry exists, create a new one\nconst response=await apiService.createOrUpdateJournalEntry(journalData);setEntryId(response.id);// Set the new ID after creation\nconsole.log('Journal entry created:',response);}}catch(error){console.error('Error saving journal entry:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"journal-container\",children:[/*#__PURE__*/_jsx(\"textarea\",{value:journalEntry,onChange:e=>setJournalEntry(e.target.value),placeholder:\"Write your thoughts here...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveJournalEntry,children:\"Save Entry\"})]});};export default Journal;","map":{"version":3,"names":["React","useState","useEffect","apiService","useCalendar","jsx","_jsx","jsxs","_jsxs","Journal","selectedDate","journalEntry","setJournalEntry","entryId","setEntryId","fetchJournalEntry","console","log","response","getJournalEntryByDate","entry_text","undefined","id","error","handleSaveJournalEntry","journalData","date","updateJournalEntry","createOrUpdateJournalEntry","className","children","value","onChange","e","target","placeholder","onClick"],"sources":["/Users/nicklankau/life-tracker/SolaceOS/frontend/src/components/Journal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport apiService from '../apiService';\nimport './Journal.css';\nimport { useCalendar } from './CalendarContext';\n\nconst Journal = () => {\n    const { selectedDate } = useCalendar();\n    const [journalEntry, setJournalEntry] = useState(\"\");\n    const [entryId, setEntryId] = useState(null); // Store the ID of the journal entry\n\n    useEffect(() => {\n        const fetchJournalEntry = async () => {\n            try {\n                console.log('Fetching journal entry for date:', selectedDate);\n                const response = await apiService.getJournalEntryByDate(selectedDate);\n                console.log('API Response:', response);\n\n                if (response && response.entry_text !== undefined) {\n                    setJournalEntry(response.entry_text || \"\");\n                    setEntryId(response.id); // Store the ID of the fetched entry\n                    console.log('Journal entry ID set:', response.id);\n                } else {\n                    setJournalEntry(\"\");\n                    setEntryId(null); // Reset the ID if no entry is found\n                    console.log('No journal entry found for this date.');\n                }\n            } catch (error) {\n                console.error('Error fetching journal entry:', error);\n            }\n        };\n\n        fetchJournalEntry();\n    }, [selectedDate]);\n\n    const handleSaveJournalEntry = async () => {\n        try {\n            const journalData = {\n                entry_text: journalEntry,\n                date: selectedDate,\n            };\n\n            if (entryId) {\n                // If an entry exists, update it\n                const response = await apiService.updateJournalEntry(entryId, journalData);\n                console.log('Journal entry updated:', response);\n            } else {\n                // If no entry exists, create a new one\n                const response = await apiService.createOrUpdateJournalEntry(journalData);\n                setEntryId(response.id); // Set the new ID after creation\n                console.log('Journal entry created:', response);\n            }\n        } catch (error) {\n            console.error('Error saving journal entry:', error);\n        }\n    };\n\n    return (\n        <div className=\"journal-container\">\n            <textarea\n                value={journalEntry}\n                onChange={(e) => setJournalEntry(e.target.value)}\n                placeholder=\"Write your thoughts here...\"\n            />\n            <button onClick={handleSaveJournalEntry}>Save Entry</button>\n        </div>\n    );\n};\n\nexport default Journal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}